@using BlindBoxShop.Shared.DataTransferObject.BlindBox
@using BlindBoxShop.Shared.Enum
@using BlindBoxShop.Service.Contract
@using BlindBoxShop.Shared.DataTransferObject.OrderDetail

<MudDialog>
    <TitleContent>
        Order Details
    </TitleContent>
    <DialogContent>
        @if (OrderWithDetails == null)
        {
            <MudProgressCircular Indeterminate="true" Class="mx-auto" Color="Color.Primary" />
            <MudText Typo="Typo.body1" Color="Color.Secondary" Class="text-center mt-2">
                Loading...
            </MudText>
        }
        else
        {
            <MudText Typo="Typo.h6" Class="mb-4">Order Information</MudText>

            <!-- Order Details Section -->
            <MudGrid Class="mb-4">
                <MudItem xs="12" sm="6">
                    <MudText Typo="Typo.body1"><b>Order ID:</b> @OrderWithDetails.Order.Id.ToString().Substring(0, 8)</MudText>
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudText Typo="Typo.body1"><b>Customer Name:</b> @OrderWithDetails.Order.CustomerName</MudText>
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudText Typo="Typo.body1"><b>Address:</b> @OrderWithDetails.Order.Address, @OrderWithDetails.Order.Wards, @OrderWithDetails.Order.Province</MudText>
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudText Typo="Typo.body1"><b>Total:</b> @FormatPrice(OrderWithDetails.Order.Total)</MudText>
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudText Typo="Typo.body1">
                        <b>Status:</b> 
                        <MudChip T="string" Size="Size.Small" Color="@GetOrderStatusColor(OrderWithDetails.Order.Status)">
                            @OrderWithDetails.Order.Status.ToString()
                        </MudChip>
                    </MudText>
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudText Typo="Typo.body1"><b>Created At:</b> @OrderWithDetails.Order.CreatedAt.ToString("dd/MM/yyyy HH:mm")</MudText>
                </MudItem>
            </MudGrid>

            <!-- Order Items Section -->
            @if (OrderWithDetails.OrderDetails == null || !OrderWithDetails.OrderDetails.Any())
            {
                <MudText Typo="Typo.body1" Color="Color.Secondary" Class="text-center">
                    No order details available for this order.
                </MudText>
            }
            else
            {
                <MudTable Items="@OrderWithDetails.OrderDetails" Dense="true" Class="mb-4">
                    <HeaderContent>
                        <MudTh>Product</MudTh>
                        <MudTh>Name</MudTh>
                        <MudTh>Quantity</MudTh>
                        <MudTh>Price</MudTh>
                        <MudTh>Total</MudTh>
                    </HeaderContent>
                    <RowTemplate Context="detail">
                        <MudTd>
                            <div class="product-image-container">
                                @if (!string.IsNullOrEmpty(detail.ImageUrl))
                                {
                                    <img src="@detail.ImageUrl" alt="@GetDisplayName(detail)" 
                                         class="h-full w-full object-contain" 
                                         @onclick="() => OpenImagePreview(detail.ImageUrl)" />
                                    <div class="image-overlay" @onclick="() => OpenImagePreview(detail.ImageUrl)">
                                        <MudIcon Icon="@Icons.Material.Filled.ZoomIn" Size="Size.Small" Color="Color.Surface" />
                                    </div>
                                }
                                else
                                {
                                    <div class="w-full h-full bg-gray-100 flex items-center justify-center">
                                        <MudIcon Icon="@Icons.Material.Filled.Spa" Size="Size.Small" Color="Color.Primary" />
                                    </div>
                                }
                            </div>
                        </MudTd>
                        <MudTd>
                            <div class="font-medium">@GetDisplayName(detail)</div>
                            @if (_blindBoxItems.ContainsKey(detail.Id) && _blindBoxItems[detail.Id] != null)
                            {
                                <div class="flex items-center mt-1">
                                    <MudChip T="string" Size="Size.Small" 
                                             Color="@GetItemRarityColor(_blindBoxItems[detail.Id].Rarity)" 
                                             Class="mr-1 px-2 py-0">
                                        @GetRarityText(_blindBoxItems[detail.Id].Rarity)
                                    </MudChip>
                                    @if (_blindBoxItems[detail.Id].IsSecret)
                                    {
                                        <MudIcon Icon="@Icons.Material.Filled.Star" 
                                              Size="Size.Small" 
                                              Color="Color.Warning" 
                                              Class="ml-1" />
                                    }
                                </div>
                            }
                        </MudTd>
                        <MudTd>@detail.Quantity</MudTd>
                        <MudTd>@FormatPrice(detail.Price)</MudTd>
                        <MudTd>@FormatPrice(detail.TotalPrice)</MudTd>
                    </RowTemplate>
                </MudTable>
            }
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel" Color="Color.Secondary">Close</MudButton>
    </DialogActions>
</MudDialog>

<!-- Image Preview Overlay -->
<MudOverlay @bind-Visible="_imagePreviewVisible" DarkBackground="true" ZIndex="999" OnClick="CloseImagePreview">
    <div class="d-flex justify-center align-items-center" style="height: 100vh;" @onclick:preventDefault>
        <div class="position-relative" style="width: 90%; max-width: 800px; max-height: 90vh; overflow: auto;">
            <MudCard Class="pa-4 position-relative" Style="background-color: rgba(0,0,0,0.8);">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6" Color="Color.Surface">Image Preview</MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudIconButton Icon="@Icons.Material.Filled.Close" Color="Color.Surface" OnClick="CloseImagePreview" />
                    </CardHeaderActions>
                </MudCardHeader>
                <MudCardContent Class="d-flex flex-column align-center justify-center">
                    <div class="result-image-container @($"{(_isZoomed ? "zoomed" : "")}")">
                        <MudImage Src="@_selectedImage" 
                               Alt="Image Preview"
                               Class="result-image rounded-lg" 
                               ObjectFit="ObjectFit.Contain"
                               @onclick="ToggleZoom" />
                    </div>
                </MudCardContent>
            </MudCard>
        </div>
    </div>
</MudOverlay>

<style>
    .product-image-container {
        width: 48px;
        height: 48px;
        overflow: hidden;
        border-radius: 4px;
        position: relative;
        cursor: pointer;
    }
    
    .product-image-container:hover .image-overlay {
        opacity: 1;
    }
    
    .image-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0,0,0,0.3);
        display: flex;
        justify-content: center;
        align-items: center;
        opacity: 0;
        transition: opacity 0.2s ease;
    }
    
    .result-image-container {
        width: 280px;
        height: 280px;
        overflow: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: transparent;
        border-radius: 8px;
        transition: transform 0.3s ease;
        cursor: zoom-in;
    }
    
    .result-image-container.zoomed {
        transform: scale(1.5);
        cursor: zoom-out;
    }
    
    .result-image {
        max-width: 100%;
        max-height: 100%;
        object-fit: contain;
        width: 100%;
        height: 100%;
    }
</style>
